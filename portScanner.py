#!/usr/bin/python
from logging import getLogger, ERROR
getLogger("scapy.runtime").setLevel(ERROR)
from scapy.all import *
import sys
from datetime import datetime
from time import strftime

try:
    target = raw_input("Enter target IP address: ")
    min_port = raw_input("Enter minimum port number: ")
    max_port = raw_input("Enter maximum port number: ")
    try:
        if int(min_port) >= 0 and int(max_port) >= 0 and int(max_port) >= int(min_port):
            pass
        else:
            print "Invalid range of ports"
            print "Exiting..."
            sys.exit(1)
    except  Exception:
        print "Invalid range of ports"
        print "Exiting..."
        sys.exit(1)
except KeyboardInterrupt:
    print "\nUser Requested Shutdown..."
    print "Exiting..."
    sys.exit(1)

ports = range(int(min_port), int(max_port)+1)
start_clock = datetime.now()

def checkhost(ip):
    newIP = str(ip)
    conf.verb = 0
    try:
        ping = sr1(IP(dst = newIP)/ICMP())
        print "Target is up, beginning scan..."
    except Exception:
        print "\nCouldn't resolve target"
        print "Exiting..."
        sys.exit(1)

def scanport(port):
    srcport = RandShort()
    conf.verb = 0
    SYNACKpkt = sr1(IP(dst = target)/TCP(sport = srcport, dport = port, flags = "S"))
    if(str(type(SYNACKpkt)) == "<type 'NoneType'>"):
        print str(target) + ":" + str(port) + " is filtered.\n"
        return False
    elif SYNACKpkt.getlayer(TCP).flags == 0x12:
        return True
    else:
        return False
    RSTpkt = IP(dst = target)/TCP(sport = srcport, dport = port, flags = "R")
    send(RSTpkt)

checkhost(target)
print "Scan started at " + strftime("%H:%M:%S") + "\n"

for port in ports:
    status = scanport(port)
    if status == True:
        print "Port " + str(port) + ": Open"

stop_clock = datetime.now()
total_time = stop_clock - start_clock
print "\nScan Finished!"
print "Total scan duration: " + str(total_time)
